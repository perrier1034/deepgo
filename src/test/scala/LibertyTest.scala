// passed
object LibertyTest extends App {
  import Rules._
  import Implicits._

  // init
  board.printState(19, 19, None, None)

  // result
  liberties(board).printState(19, 19)

  // channel test
  board.toLibertyChannel.toCharArray.printSelf(6, 361)

  def board =  Array(
    '.', '.', '.', 'O', 'O', 'O', 'X', 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', 'O', 'X', 'X', 'X', 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', 'O', 'X', 'X', '.', 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', 'X', 'O', 'O', 'X', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', 'O', '.', 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', 'O', '.', 'O', '.', '.', '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', '.',

    '.', '.', '.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', 'O', 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    'O', 'X', '.', 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'X', '.', '.', '.', '.', '.',

    'X', 'O', 'O', 'X', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', 'X', 'X', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', '.', '.', '.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'
  )
}
