object SuicideTest extends App {

  import Rules._
  import Utils._
  import Implicits._

  val init = board
//  init.printState(19, 19, None, None)

//  Array.range(0, 361).map { i =>
//    val (x, y) = i.toCoordinate
//    if (init(i) != Color.Empty) {
//      false
//    } else {
//        isSuicideMove(Move(Color.White, x, y, isValid=true), init)
//    }
//  }.map(x => if (x) 1 else 0).printState(19, 19)

  assert(!isSuicideMove(Move(Color.Black, 2, 11, isValid=true), init))

  def board =  Array(
    '.', '.', '.', 'O', 'O', 'O', 'X', 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', 'O', 'X', 'X', 'X', 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', 'O', 'X', 'X', '.', 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', 'X', 'O', 'O', 'X', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', 'O', '.', 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', 'O', '.', 'O', '.', '.', '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', '.',

    '.', '.', '.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', 'O', 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    'O', 'X', '.', 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'X', '.', '.', '.', '.', '.',

    'X', 'O', 'O', 'X', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', 'X', 'X', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', '.', '.', '.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',

    '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'
  )


}
